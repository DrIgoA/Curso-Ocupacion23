
    model{
  
    # Priors 
    omega~dunif(0,1)
    
    # Hyperpriors for species effects          
    mu.lpsi ~ dnorm(0, 1/2.25^2)  
    tau.lpsi <- pow(sd.lpsi,-2)   
    sd.lpsi ~ dunif(0,8)              
    mu.betalpsi1~ dnorm(0, 1/2.25^2)
    tau.betalpsi1 <- pow(sd.betalpsi1,-2)
    sd.betalpsi1 ~ dunif(0,8)
    mu.betalpsi2~ dnorm(0, 1/2.25^2)
    tau.betalpsi2 <- pow(sd.betalpsi2,-2)
    sd.betalpsi2 ~ dunif(0,8)
    tau.betalpsi3 <- pow(sd.betalpsi3,-2)
    sd.betalpsi3 ~ dunif(0,8)
    mu.betalpsi4~ dnorm(0, 1/2.25^2)
    tau.betalpsi4 <- pow(sd.betalpsi4,-2)
    sd.betalpsi4 ~ dunif(0,8)
    mu.lp ~ dnorm(0, 1/2.25^2)
    tau.lp <- pow(sd.lp,-2)
    sd.lp ~ dunif(0,5)
    mu.betalp1 ~ dnorm(0, 1/2.25^2)
    tau.betalp1 <- pow(sd.betalp1,-2)
    sd.betalp1 ~ dunif(0,5)
    mu.betalp2 ~ dnorm(0, 0.01)
    tau.betalp2 <- pow(sd.betalp2,-2)
    sd.betalp2 ~ dunif(0,5)
    mu.betalp3 ~ dnorm(0, 1/2.25^2)
    tau.betalp3 <- pow(sd.betalp3,-2)
    sd.betalp3 ~ dunif(0,5)
    
    # priors for species specific effects in occupancy and detection 
    # sp represents per species
    for (k in 1:M){
    lpsi[k] ~ dnorm(mu.lpsi, tau.lpsi)
    lp[k] ~ dnorm(mu.lp, tau.lp)
    betalpsi1[k] ~ dnorm (mu.betalpsi1, tau.betalpsi1)
    betalpsi2[k] ~ dnorm (mu.betalpsi2, tau.betalpsi2)
    betalpsi3[k] ~ dnorm (mu.betalpsi3, tau.betalpsi3)
    betalpsi4[k] ~ dnorm (mu.betalpsi4, tau.betalpsi4)
    betalp1[k] ~ dnorm(mu.betalp1,tau.betalp1)
    betalp2[k] ~ dnorm(mu.betalp2,tau.betalp2)
    betalp3[k] ~ dnorm(mu.betalp3,tau.betalp3)
    
    # Superpopulation process
    w[k]~dbern(omega)
    
    # Ecological model, process model (true occurrence at site i) 
    for (i in 1:nsite) {                                           #loop sobre sitios 
    logit(psi[k,i]) <- lpsi[k] + betalpsi1[k]*forest[i]  
    betalpsi2[k]*yield[i]+ betalpsi3[k]*aridity[i] 
    mu.psi[k,i]<-w[k]*psi[k,i]
    z[i,k] ~ dbern(mu.psi[k,i])     
    
    
    # Observation model for site i, replicate nrep=j, nspec=k
    for (j in 1:J[i]) {                                   #loop sobre unbalanced reps J   
    logit(p[k,i,j]) <-  lp[k] + betalp1[k]* htype[i]+ betalp2[k]* detmm[i]
    + betalp3[k]* detier[i]
    mu.p[k,i,j] <- p[k,i,j]*z[i,k]
    y[k,i,j] ~ dbern(mu.p[k,i,j])
    } #nrep
    } #nsite
    } #nspec
    
    # Derived quantities
    for (i in 1:nsite) {                                           
    Nsite [i] <- sum (z[i,])     # number of sp per site
    }
    for (k in 1:nspec){                                         
    Nocc.fs [k] <- sum (z[,k])   #number of occupied sites
    }
    n0<-sum(w[(nspec+1):(nspec+nz)]) #Number of unseen species
    Ntotal<- sum(w[])                #total metacommunity size
    
    lpsiS[1:(nspec+1)]<- lpsi[1:(nspec+1)]
    betalpsi1S[1:(nspec+1)]<- betalpsi1[1:(nspec+1)]
    betalpsi2S[1:(nspec+1)]<- betalpsi2[1:(nspec+1)]
    betalpsi3S[1:(nspec+1)]<- betalpsi3[1:(nspec+1)]
    betalpsi4S[1:(nspec+1)]<- betalpsi4[1:(nspec+1)]
    lpS[1:(nspec+1)]<- lp[1:(nspec+1)]
    betalp1S[1:(nspec+1)]<- betalp1[1:(nspec+1)]
    betalp2S[1:(nspec+1)]<- betalp2[1:(nspec+1)]
    betalp3S[1:(nspec+1)]<- betalp3[1:(nspec+1)]
    
    } #model
    
