
model{

# modelos para missing covariates
 for(j in 1:134){
  for (l in 1:3){
    uso[j,l]~dbern(puso)
    vvegz[j,l]~dnorm(mu.vvegz, tau.vvegz)
    tempz[j,l]~dnorm(mu.tempz, tau.tempz)
    }}
  puso~dunif(0,1)
  tau.vvegz<-pow(sd.vvegz,-2)
  sd.vvegz~dunif(0,100)
  mu.vvegz~dnorm(0,0.0001)
  tau.tempz<-pow(sd.tempz,-2)
  sd.tempz~dunif(0,100)
  mu.tempz~dnorm(0,0.0001)

# Hyperpriors 
 mu.co.lpsi ~ dnorm(0, 0.01)
 mu.co.betalpsi1 ~ dnorm(0, 0.01)
 mu.co.betalpsi2 ~ dnorm(0, 0.01)
 mu.co.betalpsi3 ~ dnorm(0, 0.01)
 mu.co.lp ~ dnorm(0, 0.01)
 mu.co.betalp1 ~ dnorm(0, 0.01)
 tau.co.lpsi <- pow(sd.co.lpsi,-2)   
 sd.co.lpsi ~ dunif(0,8)
 tau.co.lp <- pow(sd.co.lp,-2)   
 sd.co.lp ~ dunif(0,8)
 tau.co.betalpsi1 <- pow(sd.co.betalpsi1,-2)
 sd.co.betalpsi1 ~ dunif(0,8)
 tau.co.betalpsi2 <- pow(sd.co.betalpsi2,-2)
 sd.co.betalpsi2 ~ dunif(0,8)
 tau.co.betalpsi3 <- pow(sd.co.betalpsi3,-2)
 sd.co.betalpsi3 ~ dunif(0,8)
 tau.co.betalp1 <- pow(sd.co.betalp1,-2)
 sd.co.betalp1 ~ dunif(0,8)

# priors for species specific effects in occupancy and detection 
# sp represents per species
# co represents community 
  for (k in 1:nspec){
    mu.sp.lpsi[k] ~ dnorm(mu.co.lpsi, tau.co.lpsi)  
    mu.sp.betalpsi1[k]~ dnorm(mu.co.betalpsi1, tau.co.betalpsi1)
    mu.sp.betalpsi2[k]~ dnorm(mu.co.betalpsi2, tau.co.betalpsi2)
    mu.sp.betalpsi3[k]~ dnorm(mu.co.betalpsi3, tau.co.betalpsi3)
    mu.sp.lp[k] ~ dnorm(mu.co.lp, tau.co.lp)
    mu.sp.betalp1[k]~ dnorm(mu.co.betalp1, tau.co.betalp1)
    tau.sp.lpsi[k] <- pow(sd.sp.lpsi[k],-2)   
    sd.sp.lpsi[k] ~ dunif(0,8)
    tau.sp.lp[k] <- pow(sd.sp.lp[k],-2)
    sd.sp.lp[k] ~ dunif(0,8)
    tau.sp.betalpsi1[k] <- pow(sd.sp.betalpsi1[k],-2)
    sd.sp.betalpsi1[k] ~ dunif(0,8)
    tau.sp.betalpsi2[k] <- pow(sd.sp.betalpsi2[k],-2)
    sd.sp.betalpsi2[k] ~ dunif(0,8)
    tau.sp.betalpsi3[k] <- pow(sd.sp.betalpsi3[k],-2)
    sd.sp.betalpsi3[k] ~ dunif(0,8)
    tau.sp.betalp1[k] <- pow(sd.sp.betalp1[k],-2)
    sd.sp.betalp1[k] ~ dunif(0,8)

# priors for species-specific time effects
  for (l in 1:season){ 
      lpsi[k,l] ~ dnorm(mu.sp.lpsi[k], tau.sp.lpsi[k])
      lp[k,l] ~ dnorm(mu.sp.lp[k], tau.sp.lp[k])
      betalpsi1[k,l] ~ dnorm (mu.sp.betalpsi1[k], tau.sp.betalpsi1[k])
      betalpsi2[k,l] ~ dnorm (mu.sp.betalpsi2[k], tau.sp.betalpsi2[k])
      betalpsi3[k,l] ~ dnorm (mu.sp.betalpsi3[k], tau.sp.betalpsi3[k])
      betalp1[k,l] ~ dnorm(mu.sp.betalp1[k],tau.sp.betalp1[k])
}
  
# Ecological model, process model (true occurrence at site i) 
  ## time as random effect
     
      for (i in 1:nsite) {                                           #loop sobre sitios 
        for (l in 1:season){                                         #loop sobre tiempo 
              logit(psi[i,k,l]) <- lpsi[k,l] + betalpsi1[k,l]*vvegz[i,l] + 
                    betalpsi2[k,l]*uso[i,l]+ betalpsi3[k,l]*manejo[i,l] 
              z[i,k,l] ~ dbern(psi[i,k,l])
   
# Observation model for site i, replicate nrep=j, nspec=k, season=l

            for (j in 1:nrep) {                                     #loop sobre replicates nrep   
               logit(p[i,j,k,l]) <-  lp[k,l] + betalp1[k,l]* tempz[i,l]
               mu.p[i,j,k,l] <- p[i,j,k,l]*z[i,k,l]
               y[i,j,k,l] ~ dbern(mu.p[i,j,k,l])
               } #nrep
           } #season
         } #nsite
       } #nspec

# Derived quantities

 for (i in 1:nsite) {                                           
   for (l in 1:season){                                         
    Nsite [i,l] <- sum (z[i,,])
   }
  }

} #model

