ylim = c(10, 14), cex = 1.5, lwd = 2, frame.plot = FALSE, las = 1, pch = 16,
xlab = "Body length", ylab = "Wing span")
summary(lm <- lm(wing ~ pop-1 + body))     # Same as fm2
library(lme4)
summary(lmm1 <- lmer(wing ~ (1|pop) + body))  # Fit the model
ranef(lmm1)                                   # Print random effects
alpha_j <- fixef(lmm1)[1]+ranef(lmm1)$pop[,1]
cbind(fixed = coef(lm)[1:3], random = alpha_j)
op <- par(lwd = 3)
abline(lm$coef[1], lm$coef[4], col = "red", lty = 2)
abline(lm$coef[2], lm$coef[4], col = "blue", lty = 2)
abline(lm$coef[3], lm$coef[4], col = "green", lty = 2)
abline(alpha_j[1], fixef(lmm1)[2], col = "red")
abline(alpha_j[2], fixef(lmm1)[2], col = "blue")
abline(alpha_j[3], fixef(lmm1)[2], col = "green")
abline(fixef(lmm1), col = "black")
legend(6.5, 14, c("Catalonia", "Aragon", "Navarra"), col=c("blue", "green", "red"),
lty = 1, pch = 16, bty = "n", cex = 1.5)
par(op)
summary(lmm2 <- lmer(wing ~ body + (1|pop) + (0+body|pop)))
library(AHMbook)
install.packages("AHMbook")
#library(R2WinBUGS)
#bugs.dir <- "C:/WinBUGS14/"          # Place where your WinBUGS installed
library(jagsUI)
# ~~~~~ this section requires the following code from section 5.3 ~~~~~~~~~~
# Generate data with data.fn from chapter 4
set.seed(24)
data <- data.fn(show.plot=FALSE)
# Function definition with set of default values
data.fn <- function(M = 267, J = 3, mean.lambda = 2, beta1 = -2,
beta2 = 2, beta3 = 1, mean.detection = 0.3, alpha1 = 1, alpha2 = -3,
alpha3 = 0, show.plot = TRUE)
# Function definition with set of default values
data.fn <- function(M = 267, J = 3, mean.lambda = 2, beta1 = -2,
beta2 = 2, beta3 = 1, mean.detection = 0.3, alpha1 = 1, alpha2 = -3,
alpha3 = 0, show.plot = TRUE)
data <- data.fn(show.plot=FALSE)
# Function definition with set of default values
data.fn <- function(M = 267, J = 3, mean.lambda = 2, beta1 = -2,
beta2 = 2, beta3 = 1, mean.detection = 0.3, alpha1 = 1,
alpha2 = -3,alpha3 = 0, show.plot = TRUE)
)
attach(data)
# Function definition with set of default values
data.fn <- function(M = 267, J = 3, mean.lambda = 2, beta1 = -2,
beta2 = 2, beta3 = 1, mean.detection = 0.3, alpha1 = 1,
alpha2 = -3,alpha3 = 0, show.plot = TRUE)
data <- data.fn(show.plot=FALSE)
attach(data)
# Bundle data
win.data <- list(C = C, M = nrow(C), J = ncol(C), elev = elev, forest = forest,
elev.forest = elev * forest, wind = wind)
Create covariates
elev <- runif(n = M, -1, 1)                         # Scaled elevation
forest <- runif(n = M, -1, 1)                       # Scaled forest cover
wind <- array(runif(n = M*J, -1, 1), dim = c(M, J)) # Scaled wind speed
# Function definition with set of default values
data.fn <- function(M = 267, J = 3, mean.lambda = 2, beta1 = -2,
beta2 = 2, beta3 = 1, mean.detection = 0.3, alpha1 = 1,
alpha2 = -3,alpha3 = 0, show.plot = TRUE)
data <- data.fn(show.plot=FALSE)
attach(data)
M = 267
J = 3
mean.lambda = 2
beta1 = -2
beta2 = 2
beta3 = 1
mean.detection = 0.3
alpha1 = 1
alpha2 = -3
alpha3 = 0
# Create covariates
elev <- runif(n = M, -1, 1)                         # Scaled elevation
forest <- runif(n = M, -1, 1)                       # Scaled forest cover
wind <- array(runif(n = M*J, -1, 1), dim = c(M, J)) # Scaled wind speed
# Bundle data
win.data <- list(C = C, M = nrow(C), J = ncol(C), elev = elev, forest = forest,
elev.forest = elev * forest, wind = wind)
# Specify model in BUGS language
cat(file = "RE.Poisson.txt","
model {
# Priors
mu.alpha ~ dnorm(0, 0.001)                # Mean hyperparam
tau.alpha <- pow(sd.alpha, -2)
sd.alpha ~ dunif(0, 10)                   # sd hyperparam
for(k in 1:4){
alpha[k] ~ dunif(-10, 10)              # Regression params
}
# Likelihood
for (i in 1:M){
alpha0[i] ~ dnorm(mu.alpha, tau.alpha) # Random effects and hyperparams
re0[i] <- alpha0[i] - mu.alpha         # zero-centered random effects
for(j in 1:J){
C[i,j] ~ dpois(lambda[i,j])
log(lambda[i,j]) <- alpha0[i] + alpha[1] * elev[i] + alpha[2] * forest[i] +
alpha[3] * elev.forest[i] + alpha[4] * wind[i,j]
}
}
}")
# Other model run preparations
inits <- function() list(alpha0 = rnorm(M), alpha = rnorm(4)) # Inits
params <- c("mu.alpha", "sd.alpha", "alpha0", "alpha", "re0") # Params
ni <- 30000 ; nt <- 25 ; nb <- 5000 ; nc <- 3                 # MCMC settings
# Call WinBUGS or JAGS from R (ART 6-7 min) and summarize posteriors
out8 <- jags(win.data, inits, params, "RE.Poisson.txt",
n.chains = nc, n.thin = nt, n.iter = ni, n.burnin = nb)
## generar datos
n.groups<-56
n.sample<-10
n<-n.groups*n.sample
pop<-gl(n=n.groups, k=n.sample)
#longitud del cuerpo (cm)
largo.original<-runif(n, 45,70)
mn<-mean(largo.original)
sd<-sd(largo.original)
largo<-(largo.original-mn)/sd
hist(length)
Xmat<-model.matrix(~pop*largo-1-largo)
Xmat
pop*largo
pop
intercept.mean<-230
intercept.sd<-20
slope.mean<-60
slope.sd<-30
intercept.effects<-rnorm(n=n.groups, mean=intercept.mean, sd=intercept.sd)
intercept.effects
slope.effects<-rnorm(n=n.groups, mean=slope.mean, sd=slope.sd)
all.effects<-c(intercept.effects,slope.effects)
lin.pred<-Xmat[,]%*%all.effects
lin.pred
mass<-lin.pred+eps
eps<-rnorm(n=n, mean=0, sd=30)
mass<-lin.pred+eps
mass
hist(mass)
xyplot(mass~largo|pop)
library(lattice)
xyplot(mass~largo|pop)
jags.data<-list(mass=as.numeric(mass), pop=as.numeric(pop),
largo=largo,ngroups=max(as.numeric(pop)), n=n)
sink("lme.model1.txt")
cat("
model{
mu.int~dnorm(0,0.001)
tau.int<-1/(sigma.int*sigma.int)
sigma.int~dunif(0,100)
beta~dnorm(0,0.001)
tau<-1/(sigma*sigma)
sigma~dunif(0,100)
#previas
for (i in 1:ngroups){
alpha[i]~dnorm(mu.int, tau.int)
}
#likelihood
for(i in 1:n){
mass[i]~dnorm(mu[i], tau)
mu[i]<- alpha[pop[i]]+beta*largo[i]
}
}
", fill=TRUE)
sink()
# datos para jags
jags.data<-list(mass=as.numeric(mass), pop=as.numeric(pop),
largo=largo,ngroups=max(as.numeric(pop)), n=n)
# inits
inits<-function(){list(alpha=rnorm(n.groups,0,2), beta=rnorm(1,1,1),
mu.int=rnorm(1,0,1), sigma.int=rlnorm(1), sigma=rlnorm(1))}
parameters<-c("alpha","beta","mu.int","sigma.int","sigma")
ni<-2000
nb<-500
nt<-2
nc<-3
out<-jags(jags.data, inits, parameters, "lme.model1.txt", n.thin = nt, n.chains = nc,
n.burnin = nb, n.iter = ni)
out
n
out
largo.original
largo
out
n
largo.pred<-seq(-2,2,1000)
pred<-array(NA,1000,56)
pred<-array(NA,dim=c(1000,56))
for(i in 1:56){
pred[,i]<-out$mean$alpha[i]+out$mean$beta*largo.pred
}
pred
matplot(largo.pred,pred)
pred
largo.pred
largo.pred
largo.pred<-seq(-2,2,,1000)
largo.pred
pred<-array(NA,dim=c(1000,56))
for(i in 1:56){
pred[,i]<-out$mean$alpha[i]+out$mean$beta*largo.pred
}
matplot(largo.pred,pred)
matplot(largo.pred,pred, col = "grey", xlab = "largo", ylab = "masa")
matplot(largo.pred,pred, col = "grey", xlab = "largo", ylab = "masa")
lines(out$mean$mu.int+out$mean$beta*largo.pred, col="black", lwd=3)
lines(largo.pred, out$mean$mu.int+out$mean$beta*largo.pred, col="black", lwd=3)
matplot(largo.pred,pred, col = "grey", xlab = "largo", ylab = "masa",type="l",lty = 1)
lines(largo.pred, out$mean$mu.int+out$mean$beta*largo.pred, col="black", lwd=3)
n
### RANDOM INTERCPTS, RANDOM SLOPES
sink("lme.model2.txt")
cat("
model{
mu.int~dnorm(0,0.001)
tau.int<-1/(sigma.int*sigma.int)
sigma.int~dunif(0,100)
mu.slope~dnorm(0,0.001)
tau.slope<-1/(sigma.slope*sigma.slope)
sigma.slope~dunif(0,100)
#previas
for (i in 1:ngroups){
alpha[i]~dnorm(mu.int, tau.int)
beta[i]~ dnorm(mu.slope, tau.slope)
}
#likelihood
for(i in 1:n){
mass[i]~dnorm(mu[i], tau)
mu[i]<- alpha[pop[i]]+beta[pop[i]]*largo[i]
}
}
", fill=TRUE)
sink()
# datos para jags
jags.data<-list(mass=as.numeric(mass), pop=as.numeric(pop),
largo=largo,ngroups=max(as.numeric(pop)), n=n)
# inits
inits<-function(){list(alpha=rnorm(n.groups,0,2), beta=rnorm(n.groups,1,1),
mu.int=rnorm(1,0,1), sigma.int=rlnorm(1), sigma=rlnorm(1))}
parameters<-c("alpha","beta","mu.int","sigma.int","sigma")
ni<-2000
nb<-500
nt<-2
nc<-3
out<-jags(jags.data, inits, parameters, "lme.model2.txt", n.thin = nt, n.chains = nc,
n.burnin = nb, n.iter = ni)
### RANDOM INTERCPTS, RANDOM SLOPES
sink("lme.model2.txt")
cat("
model{
mu.int~dnorm(0,0.001)
tau.int<-1/(sigma.int*sigma.int)
sigma.int~dunif(0,100)
mu.slope~dnorm(0,0.001)
tau.slope<-1/(sigma.slope*sigma.slope)
sigma.slope~dunif(0,100)
tau<-1/(sigma*sigma)
sigma~dunif(0,100)
#previas
for (i in 1:ngroups){
alpha[i]~dnorm(mu.int, tau.int)
beta[i]~ dnorm(mu.slope, tau.slope)
}
#likelihood
for(i in 1:n){
mass[i]~dnorm(mu[i], tau)
mu[i]<- alpha[pop[i]]+beta[pop[i]]*largo[i]
}
}
", fill=TRUE)
sink()
# datos para jags
jags.data<-list(mass=as.numeric(mass), pop=as.numeric(pop),
largo=largo,ngroups=max(as.numeric(pop)), n=n)
# inits
inits<-function(){list(alpha=rnorm(n.groups,0,2), beta=rnorm(n.groups,1,1),
mu.int=rnorm(1,0,1), sigma.int=rlnorm(1), sigma=rlnorm(1))}
parameters<-c("alpha","beta","mu.int","sigma.int","sigma")
parameters<-c("alpha","beta","mu.int","mu.slope","sigma.int","sigma.slope")
ni<-2000
nb<-500
nt<-2
nc<-3
out<-jags(jags.data, inits, parameters, "lme.model2.txt", n.thin = nt, n.chains = nc,
n.burnin = nb, n.iter = ni)
out
largo.pred<-seq(-2,2,,1000)
pred<-array(NA,dim=c(1000,56))
for(i in 1:56){
pred[,i]<-out$mean$alpha[i]+out$mean$beta[i]*largo.pred
}
matplot(largo.pred,pred, col = "grey", xlab = "largo", ylab = "masa",type="l",lty = 1)
lines(largo.pred, out$mean$mu.int+out$mean$mu.slope*largo.pred, col="black", lwd=3)
rm(list=ls())
library(jagsUI)
setwd("C:\Users\andrea\Documents\GitHub\Curso-Ocupacion23\Bayes")
data <- read.csv("ejemplo_AF.csv", header=T)
attach(data)
str(data)
library(jagsUI)
setwd("C:\\Users\\andrea\\Documents\\GitHub\\Curso-Ocupacion23\\Bayes")
data <- read.csv("ejemplo_AF.csv", header=T)
attach(data)
str(data)
##### GLM - efecto volumen vegetal sin especies ####
win.data <- list(vv = data$vv, centroide = data$centroide, n= nrow(data))
library("denstrip")
##### GLM randon odernada y pendiente por especie ####
win.data <- list(vv = data$vv, centroide = centroide, n= nrow(data),
sp = sp_fac)
# Define the model
sink("GLM_dos_fijas.jags")
cat("
model {
# Priors
tau <- pow(sd, -2)
sd ~ dunif(0,1000)
for (k in 1:2) {
beta0[k]~ dnorm(0, 1e-6)
beta1[k] ~ dnorm(0, 1e-6)
}
# Likelihood
for (i in 1:n) {
centroide[i] ~ dnorm(mu[i], tau)
mu[i] <- beta0[sp[i]] + beta1[sp[i]] * vv[i]
#1 cv
#2 cm
}
}
",fill = TRUE)
sink()
#valores iniciales
inits <- function() list(beta0 = rnorm(2, 2), beta1 = rnorm(2,2))
# Parametros monitoreados
params <- c("beta0", "beta1")
# MCMC settings
ni <- 10000
nt <- 2
nb <- 1000
nc <- 3
# Call JAGS from R (BRT < 1 min)
out_dos_fijas <- jags(data = win.data, inits = inits, parameters.to.save = params,
model.file = "GLM_dos_fijas.jags", n.chains = nc, n.thin = nt,
n.iter = ni, n.burnin = nb)
#Plot lineas
out_dos_fijas
vv.pred <- seq(min(data$vv),max(data$vv),length.out = 500)
ord_pred_cv <- array(NA, 500)
for(i in 1:500){
ord_pred_cv[i] <- out_dos_fijas$mean$beta0[1] + out_dos_fijas$mean$beta1[1]*vv.pred[i]
}
ord_pred_cv
ord_pred_cm <- array(NA, 500)
for(i in 1:500){
ord_pred_cm[i] <- out_dos_fijas$mean$beta0[2] + out_dos_fijas$mean$beta1[2]*vv.pred[i]
}
ord_pred_cm
#Grafico
plot(data$vv[data$sp_fac==1],data$centroide[data$sp_fac==1],     #grafico primero solo venustus
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(0,50))
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,ord_pred_cv, col= "darkred")
lines(vv.pred,ord_pred_cm, col = "darkorange")
#Grafico
plotGLM_AA<-plot(data$vv[data$sp_fac==1],data$centroide[data$sp_fac==1],     #grafico primero solo venustus
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(0,50))
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,ord_pred_cv, col= "darkred")
lines(vv.pred,ord_pred_cm, col = "darkorange")
plotGLM_AA
par(mfrow=c(2,1))
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(0,50))
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,ord_pred_cv, col= "darkred")
lines(vv.pred,ord_pred_cm, col = "darkorange")
plot(data$vv[data$sp_fac==1],data$centroide[data$sp_fac==1],     #grafico primero solo venustus
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(0,50))
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,ord_pred_cv, col= "darkred")
lines(vv.pred,ord_pred_cm, col = "darkorange")
par(mfrow=c(1,2))
plot(data$vv[data$sp_fac==1],data$centroide[data$sp_fac==1],     #grafico primero solo venustus
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(0,50))
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,ord_pred_cv, col= "darkred")
lines(vv.pred,ord_pred_cm, col = "darkorange")
##### GLM todas INTERACCON SP fijas ####
win.data <- list(vv = data$vv, centroide = data$centroide, n= nrow(data),
sp = sp)
#BETAS FIJOS
# Define the model
sink("GLM_FIJO.jags")
cat("
model {
# Priors
beta0 ~ dnorm(0, 1e-6)
beta1 ~ dnorm(0, 1e-6)
beta2 ~ dnorm(0, 1e-6)
beta3 ~ dnorm(0, 1e-6)
sigma ~ dunif(0, 10)
tau <- 1 / (sigma * sigma)
# Likelihood
for (i in 1:n) {
centroide[i] ~ dnorm(mu[i], tau)
mu[i] <- beta0 + beta1 * vv[i] + beta2 * sp[i] +
beta3 * sp[i] * vv[i]
}
}
",fill = TRUE)
sink()
#valores iniciales
inits <- function() list(beta0 = runif(1, -2, 2), beta1 = runif(1, -3, 3),
beta2 = runif(1, -3, 3),beta3 = runif(1, -3, 3))
# Parametros monitoreados
params <- c("beta0", "beta1","beta2", "beta3")
# MCMC settings
ni <- 10000
nt <- 2
nb <- 1000
nc <- 3
# Call JAGS from R (BRT < 1 min)
out_FIJOS <- jags(data = win.data, inits = inits, parameters.to.save = params,
model.file = "GLM_normal_FIJO.jags", n.chains = nc, n.thin = nt,
n.iter = ni, n.burnin = nb)
##### GLM todas INTERACCON SP fijas ####
win.data <- list(vv = data$vv, centroide = data$centroide, n= nrow(data),
sp = sp)
# Define the model
sink("GLM_FIJO.jags")
cat("
model {
# Priors
beta0 ~ dnorm(0, 1e-6)
beta1 ~ dnorm(0, 1e-6)
beta2 ~ dnorm(0, 1e-6)
beta3 ~ dnorm(0, 1e-6)
sigma ~ dunif(0, 10)
tau <- 1 / (sigma * sigma)
# Likelihood
for (i in 1:n) {
centroide[i] ~ dnorm(mu[i], tau)
mu[i] <- beta0 + beta1 * vv[i] + beta2 * sp[i] +
beta3 * sp[i] * vv[i]
}
}
",fill = TRUE)
sink()
#valores iniciales
inits <- function() list(beta0 = runif(1, -2, 2), beta1 = runif(1, -3, 3),
beta2 = runif(1, -3, 3),beta3 = runif(1, -3, 3))
# Parametros monitoreados
params <- c("beta0", "beta1","beta2", "beta3")
# MCMC settings
ni <- 10000
nt <- 2
nb <- 1000
nc <- 3
# Call JAGS from R (BRT < 1 min)
out_FIJOS <- jags(data = win.data, inits = inits, parameters.to.save = params,
model.file = "GLM_normal_FIJO.jags", n.chains = nc, n.thin = nt,
n.iter = ni, n.burnin = nb)
# Call JAGS from R (BRT < 1 min)
out_FIJOS <- jags(data = win.data, inits = inits, parameters.to.save = params,
model.file = "GLM_FIJO.jags", n.chains = nc, n.thin = nt,
n.iter = ni, n.burnin = nb)
#Plot lineas
vv.pred <- seq(min(data$vv),max(data$vv),length.out = 500)
cv_FIJO <- array(NA, 500)
for(i in 1:500){
cv_FIJO[i] <- out_FIJOS$mean$beta0 + out_FIJOS$mean$beta1 * vv.pred[i] +
out_FIJOS$mean$beta2 * 0 + out_FIJOS$mean$beta3 * vv.pred[i] * 0
}
cv_FIJO
cm_FIJO <- array(NA, 500)
for(i in 1:500){
cm_FIJO[i] <- out_FIJOS$mean$beta0 + out_FIJOS$mean$beta1 * vv.pred[i] +
out_FIJOS$mean$beta2 * 1 + out_FIJOS$mean$beta3 * vv.pred[i] * 1
}
cm_FIJO
#Grafico
plot(data$vv[data$sp_fac==1],data$centroide[data$sp_fac==1],     #grafico primero solo venustus
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(0,50))
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,cv_FIJO, col= "darkred")
lines(vv.pred,cm_FIJO, col = "darkorange")
par(mfrow=c(1,2))
plot(data$vv[data$sp_fac==1],data$centroide[data$sp_fac==1],     #grafico primero solo venustus
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(20,50), main = "GLM ord y pend variable")
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,ord_pred_cv, col= "darkred")
lines(vv.pred,ord_pred_cm, col = "darkorange")
#Grafico
plot(data$vv[data$sp_fac==1],data$centroide[data$sp_fac==1],     #grafico primero solo venustus
ylab= "Centroide",xlab = "Volumen vegetal",
pch=16, bty="l", col = "darkred", ylim = c(20,50), main = "GLM interaccion")
points(data$vv[data$sp_fac==2],data$centroide[data$sp_fac==2],     #grafico cm
pch=16, bty="l", col = "darkorange")
lines(vv.pred,cv_FIJO, col= "darkred")
lines(vv.pred,cm_FIJO, col = "darkorange")
